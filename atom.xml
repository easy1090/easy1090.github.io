<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://easy1090.github.io</id>
    <title>Gridea</title>
    <updated>2019-06-14T12:34:06.475Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://easy1090.github.io"/>
    <link rel="self" href="https://easy1090.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://easy1090.github.io/images/avatar.png</logo>
    <icon>https://easy1090.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[小程序]]></title>
        <id>https://easy1090.github.io/post/xiao-cheng-xu</id>
        <link href="https://easy1090.github.io/post/xiao-cheng-xu">
        </link>
        <updated>2019-06-14T12:30:31.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="appobject-object">App(Object object)</h1>
<p>注册小程序。接受一个 <code>Object</code> 参数，其指定小程序的生命周期回调等。</p>
<p>==<strong>App() 必须在 app.js 中调用，必须调用且只能调用一次。不然会出现无法预期的后果。</strong>==</p>
<p>参数：</p>
<h5 id="object-object">Object object</h5>
<table>
<thead>
<tr>
<th style="text-align:left">属性</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">默认值</th>
<th style="text-align:left">必填</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onlaunchobject-object">onLaunch</a></td>
<td style="text-align:left">function</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:center">生命周期回调——监听小程序初始化。全局只会触发一次。</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onshowobject-object">onShow</a></td>
<td style="text-align:left">function</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:center">生命周期回调——监听小程序启动或切前台。</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onhide">onHide</a></td>
<td style="text-align:left">function</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:center">生命周期回调——监听小程序切后台。</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onerrorstring-error">onError</a></td>
<td style="text-align:left">function</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:center">错误监听函数。</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onpagenotfoundobject-object">onPageNotFound</a></td>
<td style="text-align:left">function</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:center">页面不存在监听函数。</td>
</tr>
<tr>
<td style="text-align:left">其他</td>
<td style="text-align:left">any</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:center">开发者可以添加任意的函数或数据变量到 <code>Object</code> 参数中，用 <code>this</code>可以访问</td>
</tr>
</tbody>
</table>
<h2 id="getapp">getApp</h2>
<p>获取到小程序全局唯一的 <code>App</code> 实例。</p>
<p>参数：allowDefault    ——在 <code>App</code> 未定义时返回默认实现。当App被调用时，默认实现中定义的属性会被覆盖合并到App中。一般用于[独立分包]</p>
<h4 id="注意">注意</h4>
<ul>
<li>不要在定义于 <code>App()</code> 内的函数中，或调用 <code>App</code> 前调用 <code>getApp()</code> ，使用 <code>this</code> 就可以拿到 app 实例。</li>
<li>通过 <code>getApp()</code> 获取实例之后，不要私自调用生命周期函数。</li>
</ul>
<h3 id="pageprototypesetdataobject-data-function-callback">Page.prototype.setData(Object data, Function callback)</h3>
<p><code>setData</code> 函数用于将数据从逻辑层发送到视图层（异步），同时改变对应的 <code>this.data</code> 的值（同步）。</p>
<p><strong>注意：</strong></p>
<ol>
<li><strong>直接修改 this.data 而不调用 this.setData 是无法改变页面的状态的，还会造成数据不一致</strong>。</li>
<li>仅支持设置可 JSON 化的数据。</li>
<li>单次设置的数据不能超过1024kB，请尽量避免一次设置过多的数据。</li>
<li>请不要把 data 中任何一项的 value 设为 <code>undefined</code> ，否则这一项将不被设置并可能遗留一些潜在问题。</li>
</ol>
<h3 id="pageobject-getcurrentpages">PageObject[] getCurrentPages()</h3>
<p>获取当前页面栈。数组中第一个元素为首页，最后一个元素为当前页面。</p>
<p><strong>注意：</strong></p>
<ul>
<li><strong>不要尝试修改页面栈，会导致路由以及页面状态错误。</strong></li>
<li>不要在 <code>App.onLaunch</code> 的时候调用 <code>getCurrentPages()</code>，此时 <code>page</code> 还没有生成。</li>
</ul>
<hr>
<hr>
<h1 id="引用">引用</h1>
<p>WXML 提供两种文件引用方式<code>import</code>和<code>include</code>。</p>
<h3 id="import">import</h3>
<p><code>import</code>可以在该文件中使用目标文件定义的<code>template</code>，如：</p>
<p>在 item.wxml 中定义了一个叫<code>item</code>的<code>template</code>：</p>
<pre><code class="language-html">&lt;!-- item.wxml --&gt;
&lt;template name=&quot;item&quot;&gt;
  &lt;text&gt;{{text}}&lt;/text&gt;
&lt;/template&gt;
</code></pre>
<p>在 index.wxml 中引用了 item.wxml，就可以使用<code>item</code>模板：</p>
<pre><code class="language-html">&lt;import src=&quot;item.wxml&quot;/&gt;
&lt;template is=&quot;item&quot; data=&quot;{{text: 'forbar'}}&quot;/&gt;
</code></pre>
<h3 id="import-的作用域">import 的作用域</h3>
<p>import 有作用域的概念，即只会 import 目标文件中定义的 template，而不会 import 目标文件 import 的 template。</p>
<p><strong>如：C import B，B import A，在C中可以使用B定义的template，在B中可以使用A定义的template，但是C不能使用A定义的template</strong>。</p>
<h3 id="include">include</h3>
<p><code>include</code> 可以将目标文件<strong>除了</strong> <code>&lt;template/&gt;</code> <code>&lt;wxs/&gt;</code> 外的整个代码引入，相当于是拷贝到 <code>include</code> 位置，如：</p>
<pre><code class="language-html">&lt;!-- index.wxml --&gt;
&lt;include src=&quot;header.wxml&quot;/&gt;
&lt;view&gt; body &lt;/view&gt;
&lt;include src=&quot;footer.wxml&quot;/&gt;
&lt;!-- header.wxml --&gt;
&lt;view&gt; header &lt;/view&gt;
&lt;!-- footer.wxml --&gt;
&lt;view&gt; footer &lt;/view&gt;
</code></pre>
]]></summary>
        <content type="html"><![CDATA[<h1 id="appobject-object">App(Object object)</h1>
<p>注册小程序。接受一个 <code>Object</code> 参数，其指定小程序的生命周期回调等。</p>
<p>==<strong>App() 必须在 app.js 中调用，必须调用且只能调用一次。不然会出现无法预期的后果。</strong>==</p>
<p>参数：</p>
<h5 id="object-object">Object object</h5>
<table>
<thead>
<tr>
<th style="text-align:left">属性</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">默认值</th>
<th style="text-align:left">必填</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onlaunchobject-object">onLaunch</a></td>
<td style="text-align:left">function</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:center">生命周期回调——监听小程序初始化。全局只会触发一次。</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onshowobject-object">onShow</a></td>
<td style="text-align:left">function</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:center">生命周期回调——监听小程序启动或切前台。</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onhide">onHide</a></td>
<td style="text-align:left">function</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:center">生命周期回调——监听小程序切后台。</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onerrorstring-error">onError</a></td>
<td style="text-align:left">function</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:center">错误监听函数。</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onpagenotfoundobject-object">onPageNotFound</a></td>
<td style="text-align:left">function</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:center">页面不存在监听函数。</td>
</tr>
<tr>
<td style="text-align:left">其他</td>
<td style="text-align:left">any</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:center">开发者可以添加任意的函数或数据变量到 <code>Object</code> 参数中，用 <code>this</code>可以访问</td>
</tr>
</tbody>
</table>
<h2 id="getapp">getApp</h2>
<p>获取到小程序全局唯一的 <code>App</code> 实例。</p>
<p>参数：allowDefault    ——在 <code>App</code> 未定义时返回默认实现。当App被调用时，默认实现中定义的属性会被覆盖合并到App中。一般用于[独立分包]</p>
<h4 id="注意">注意</h4>
<ul>
<li>不要在定义于 <code>App()</code> 内的函数中，或调用 <code>App</code> 前调用 <code>getApp()</code> ，使用 <code>this</code> 就可以拿到 app 实例。</li>
<li>通过 <code>getApp()</code> 获取实例之后，不要私自调用生命周期函数。</li>
</ul>
<h3 id="pageprototypesetdataobject-data-function-callback">Page.prototype.setData(Object data, Function callback)</h3>
<p><code>setData</code> 函数用于将数据从逻辑层发送到视图层（异步），同时改变对应的 <code>this.data</code> 的值（同步）。</p>
<p><strong>注意：</strong></p>
<ol>
<li><strong>直接修改 this.data 而不调用 this.setData 是无法改变页面的状态的，还会造成数据不一致</strong>。</li>
<li>仅支持设置可 JSON 化的数据。</li>
<li>单次设置的数据不能超过1024kB，请尽量避免一次设置过多的数据。</li>
<li>请不要把 data 中任何一项的 value 设为 <code>undefined</code> ，否则这一项将不被设置并可能遗留一些潜在问题。</li>
</ol>
<h3 id="pageobject-getcurrentpages">PageObject[] getCurrentPages()</h3>
<p>获取当前页面栈。数组中第一个元素为首页，最后一个元素为当前页面。</p>
<p><strong>注意：</strong></p>
<ul>
<li><strong>不要尝试修改页面栈，会导致路由以及页面状态错误。</strong></li>
<li>不要在 <code>App.onLaunch</code> 的时候调用 <code>getCurrentPages()</code>，此时 <code>page</code> 还没有生成。</li>
</ul>
<hr>
<hr>
<h1 id="引用">引用</h1>
<p>WXML 提供两种文件引用方式<code>import</code>和<code>include</code>。</p>
<h3 id="import">import</h3>
<p><code>import</code>可以在该文件中使用目标文件定义的<code>template</code>，如：</p>
<p>在 item.wxml 中定义了一个叫<code>item</code>的<code>template</code>：</p>
<pre><code class="language-html">&lt;!-- item.wxml --&gt;
&lt;template name=&quot;item&quot;&gt;
  &lt;text&gt;{{text}}&lt;/text&gt;
&lt;/template&gt;
</code></pre>
<p>在 index.wxml 中引用了 item.wxml，就可以使用<code>item</code>模板：</p>
<pre><code class="language-html">&lt;import src=&quot;item.wxml&quot;/&gt;
&lt;template is=&quot;item&quot; data=&quot;{{text: 'forbar'}}&quot;/&gt;
</code></pre>
<h3 id="import-的作用域">import 的作用域</h3>
<p>import 有作用域的概念，即只会 import 目标文件中定义的 template，而不会 import 目标文件 import 的 template。</p>
<p><strong>如：C import B，B import A，在C中可以使用B定义的template，在B中可以使用A定义的template，但是C不能使用A定义的template</strong>。</p>
<h3 id="include">include</h3>
<p><code>include</code> 可以将目标文件<strong>除了</strong> <code>&lt;template/&gt;</code> <code>&lt;wxs/&gt;</code> 外的整个代码引入，相当于是拷贝到 <code>include</code> 位置，如：</p>
<pre><code class="language-html">&lt;!-- index.wxml --&gt;
&lt;include src=&quot;header.wxml&quot;/&gt;
&lt;view&gt; body &lt;/view&gt;
&lt;include src=&quot;footer.wxml&quot;/&gt;
&lt;!-- header.wxml --&gt;
&lt;view&gt; header &lt;/view&gt;
&lt;!-- footer.wxml --&gt;
&lt;view&gt; footer &lt;/view&gt;
</code></pre>
<!-- more -->
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://easy1090.github.io/post/hello-gridea</id>
        <link href="https://easy1090.github.io/post/hello-gridea">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="http://hvenotes.fehey.com/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>𝖶𝗂𝗇𝖽𝗈𝗐𝗌</strong> 或 <strong>𝖬𝖺𝖼𝖮𝖲</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>